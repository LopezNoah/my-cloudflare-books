---
import Layout from '../../../layouts/Layout.astro';
import BookForm from '../../../components/BookForm.tsx';
import { prisma } from '../../../lib/prisma';

const bookId = Astro.params.id;
if (!bookId) return Astro.redirect('/'); // Handle missing id

const bookResponse = await fetch(`/api/books/${bookId}`);
// const book = await bookResponse.json();
const book = await prisma.book.findFirst({
    where: {
        id: parseInt(bookId)
    }
});

const genresResponse = await fetch('/api/genres');
// const genres = await genresResponse.json();
const genres = await prisma.genre.findMany();


async function handleUpdateBook(bookData: any) {
  const response = await fetch(`/api/books/${bookId}`, {
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(bookData),
  });
  if (response.ok) {
    window.location.href = '/'; // Redirect to book list after updating
  } else {
    alert('Failed to update book');
    console.error('Error updating book:', await response.json());
  }
}
---

<Layout title={`Edit Book: ${book?.title}`}>
  <main class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-4">Edit Book: {book?.title}</h1>
    <BookForm initialBook={book} genres={genres} onSubmit={handleUpdateBook} />
  </main>
</Layout>